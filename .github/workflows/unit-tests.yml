name: unit tests

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-22.04
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
        experimental: [false]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install system dependencies
      run: |
        sudo apt-get install -yq libow-dev openssh-server openssh-client libsnappy-dev ncurses-term graphviz openocd
        sudo mkdir -p /var/cache/labgrid/runner && sudo chown runner /var/cache/labgrid/runner
    - name: Prepare local SSH
      run: |
        # the default of 777 is too open for SSH
        chmod 755 ~
        ssh-keygen -f ~/.ssh/id_ed25519.local -t ed25519 -N ""
        cat ~/.ssh/id_ed25519.local.pub >> ~/.ssh/authorized_keys
        echo -e "Host localhost ip6-localhost\n  Hostname 127.0.0.1\n  IdentityFile ~/.ssh/id_ed25519.local\n  UserKnownHostsFile ~/.ssh/known_hosts.local" >> ~/.ssh/config
        ssh -o StrictHostKeyChecking=no localhost echo OK
    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip codecov coveralls
    - name: Install labgrid
      run: |
        pip install -e ".[dev]"
    - name: Lint with pylint
      run: |
        pylint --list-msgs-enabled
        pylint labgrid
    - name: Test with pytest
      run: |
        TERM=xterm pytest --cov-config .coveragerc --cov=labgrid --local-sshmanager --ssh-username runner -k "not test_docker_with_daemon"
    - name: Build documentation
      run: |
        make -C doc clean
        make -C doc doctest
        make -C doc html
        make -C man clean
        make -C man all
        git --no-pager diff --exit-code
    - uses: codecov/codecov-action@v3
  docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install system dependencies
      run: |
        sudo apt install -yq python3-pip
        python3 -m pip install setuptools_scm
    - name: Build docker images
      run: |
        ./dockerfiles/build.sh
        docker-compose -f dockerfiles/staging/docker-compose.yml up --exit-code-from client client || (docker-compose -f dockerfiles/staging/docker-compose.yml logs --timestamps && false)
        docker-compose -f dockerfiles/staging/docker-compose.yml down
    - name: Show docker images
      run: |
        docker images
